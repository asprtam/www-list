{"version":3,"sources":["img/main-img2.png","img/sunGradient.png","img/kawiarnia.png","sec1/message.js","sec1/sec1.js","sec2/page.js","sec2/sec2.js","wrap/wrap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Message","className","Sec1","props","sec1","React","createRef","mainImg","circle","blueCircle","secondBlueCircle","shLk","e","x","y","screenX","window","innerWidth","screenY","innerHeight","this","current","style","transform","visible","opacity","onMouseMove","_onMouseMove","bind","ref","src","amount","personTable","i","push","animation","createCircles","halfCircle","Component","Page","href","link","photo","source","Sec2","sec2","sunGradient","Kawiarnia","Wrap","wrap","state","sec1Visible","addEventListener","event","deltaY","setState","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f9b1007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main-img2.4ed774b6.png\";","module.exports = __webpack_public_path__ + \"static/media/sunGradient.96a74e30.png\";","module.exports = __webpack_public_path__ + \"static/media/kawiarnia.b87dea10.png\";","import React from 'react';\nimport './message.css';\n\nconst Message = () => {\n    return (\n        <div className=\"message\">\n            <h1>Bruno Murek</h1>\n            <p>Jestem uczniem 3 klasy technikum komunikacji im. Hipolita Cegielskiego, chciałbym podjąć darmowe praktyki w Maju 2020. Interesuję się webdevelompentem, miałem już doczynienia z JavaScriptem oraz Frameworkiem ReactJS, <br/>aktualnie uczę się NodeJS.</p>\n        </div>\n    )\n}\n\nexport default Message;","import React, { Component } from 'react';\nimport mainImg from '../img/main-img2.png';\nimport Message from './message';\nimport './sec1.css';\n\nclass Sec1 extends Component  {\n    constructor(props) {\n        super(props);\n        this.sec1 = React.createRef();\n        this.mainImg = React.createRef();\n        this.circle = React.createRef();\n        this.blueCircle = React.createRef();\n        this.secondBlueCircle = React.createRef();\n        this.shLk = React.createRef();\n    }\n    _onMouseMove(e) {\n        let x;\n        let y;\n        if(e.screenX<window.innerWidth/2) {\n            x = e.screenX/window.innerWidth*-1;\n        } else {\n            x = (window.innerWidth-e.screenX/2)/window.innerWidth;\n        }\n        if(e.screenY<window.innerHeight/2) {\n            y = e.screenY/window.innerHeight*-1;\n        } else {\n            y = (window.innerHeight-e.screenY/2)/window.innerHeight;\n        }\n        this.mainImg.current.style.transform = `translate(${x}vw, ${y}vw)`;\n        this.circle.current.style.transform = `translate(${x*1.5}vw, ${y*1.5}vw)`;\n        this.blueCircle.current.style.transform = `translate(${e.screenX/window.innerWidth*-1.5}vw, ${e.screenY/window.innerWidth*-1.5}vw)`;\n        this.secondBlueCircle.current.style.transform = `translate(${e.screenX/window.innerWidth*2}vw, ${e.screenY/window.innerWidth*2}vw)`;\n        this.shLk.current.style.transform = `translate(${e.screenX/(window.innerWidth)}vw, ${e.screenY/(window.innerWidth)}vw)`;\n      }\n    componentDidUpdate() {\n        if (this.props.visible==false) {\n            this.sec1.current.style.opacity = `0`;\n        } else {\n            this.sec1.current.style.opacity = `1`;\n        }\n    }\n    componentDidMount () {\n        if (this.props.visible==false) {\n            this.sec1.current.style.opacity = `0`;\n        } else {\n            this.sec1.current.style.opacity = `1`;\n        }\n    }\n    render () {\n        const createCircles = (amount) => {\n            const personTable = []\n            for (let i=0; i<amount;i++){           \n                personTable.push(<div style={{animation: `grow 3s linear ${i/2}s infinite`}}></div>)\n            }\n            return (personTable)\n        }\n        return (\n        <div className=\"sec1\" onMouseMove={this._onMouseMove.bind(this)} ref={this.sec1}>\n            <Message />\n            <div className=\"sh-lk\" ref={this.shLk}></div>\n            <div className=\"bluecircle\" ref={this.blueCircle}></div>\n            <img src={mainImg} ref={this.mainImg}/>\n            <div className=\"circle\" ref={this.circle}>\n                {createCircles(6)}\n            </div>\n            <div className=\"half-circle\" ref={this.halfCircle}><div></div></div>\n            <div className=\"secondbluecircle\" ref={this.secondBlueCircle}></div>\n        </div>\n        );\n    }\n}\n\nexport default Sec1;\n","import React, { Component } from 'react';\nimport './sec2.css';\n\nclass Page extends Component {\n    render () {\n        return (\n            <div className=\"page\"><a className=\"imgLink\" href={this.props.link}><img src={this.props.photo}/></a><a className=\"source\" href={this.props.source}>Kod źródłowy: {this.props.source}</a></div>\n        )\n    }\n}\n\nexport default Page;","import React, { Component } from 'react';\nimport './sec2.css';\nimport Page from './page';\nimport sunGradient from '../img/sunGradient.png';\nimport Kawiarnia from '../img/kawiarnia.png';\n\nclass Sec2 extends Component {\n    constructor(props) {\n        super(props);\n        this.sec2 = React.createRef();\n    }\n    componentDidUpdate() {\n        if (this.props.visible===true) {\n            this.sec2.current.style.opacity = `0`;\n        } else {\n            this.sec2.current.style.opacity = `1`;\n        }\n    }\n    componentDidMount () {\n        if (this.props.visible===true) {\n            this.sec2.current.style.opacity = `0`;\n        } else {\n            this.sec2.current.style.opacity = `1`;\n        }\n    }\n    render () {\n        return (\n            <div className=\"sec2\" ref={this.sec2}>\n                <h1>Przykładowe Strony</h1>\n                <div className='pages'>\n                    <Page link=\"https://asprtam.github.io/react_sun_gradient/\" photo={sunGradient} source={'https://github.com/asprtam/react_sun_gradient_src'}/>\n                    <Page link=\"https://sad-fermi-3dcd93.netlify.com/\" photo={Kawiarnia} source={'view-source:https://sad-fermi-3dcd93.netlify.com/'}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Sec2;","import React, { Component } from 'react';\nimport Sec1 from '../sec1/sec1';\nimport Sec2 from '../sec2/sec2';\nimport './wrap.css';\n\nclass Wrap extends Component  {\n    constructor(props) {\n        super(props);\n        this.wrap = React.createRef();\n        this.state = { sec1Visible: true }\n      }\n    componentDidMount () {\n        window.addEventListener(\"wheel\", (event) => {\n            if (event.deltaY < 0) {\n                this.wrap.current.style.transform = 'translate(0, 0vh)';\n                this.setState({\n                    sec1Visible: true\n                })\n            } else if (event.deltaY > 0) {\n                this.wrap.current.style.transform = 'translate(0, -100vh)';\n                this.setState({\n                    sec1Visible: false\n                })\n            }\n          })\n    }\n    render() {\n        return (\n        <div className=\"wrap\" ref={this.wrap}>\n            <Sec1 visible={this.state.sec1Visible}/>\n            <Sec2 visible={this.state.sec1Visible}/>\n        </div>\n        );\n    }\n}\n\nexport default Wrap;\n","import React from 'react';\nimport Wrap from './wrap/wrap';\nimport './App.css';\nconst App = () => {\n  return (\n    <Wrap>\n    </Wrap>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}